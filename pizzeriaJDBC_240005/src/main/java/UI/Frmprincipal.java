/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import Conexion.ConexionBD;
import Conexion.IConexionBD;
import DAO.ProductoDAO;
import Interfaces.IProductoDAO;
import Interfaces.IProductoNegocio;
import Negocio.ProductoNegocio;
import Objetos.Producto;
import static java.lang.Float.parseFloat;
import java.util.List;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Chris
 */
public class Frmprincipal extends javax.swing.JFrame {

    private IProductoNegocio pNeg;
    private IProductoDAO pDao;
    private IConexionBD conexion;

    private Producto productoSeleccionado = null;

    /**
     * Creates new form Frmprincipal
     */
    public Frmprincipal() {
        initComponents();
        this.conexion = new ConexionBD();
        this.pDao = new ProductoDAO(conexion);
        this.pNeg = new ProductoNegocio(pDao);
        this.cargarMetodosIniciales();
    }

    private void cargarMetodosIniciales() {
        this.cargarProductosEnTabla();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tblProductos = new javax.swing.JTable();
        jLabel5 = new javax.swing.JLabel();
        txtNombre = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtPrecio = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtDescripcion = new javax.swing.JTextField();
        bAccion1 = new javax.swing.JButton();
        bAccion3 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID", "Nombre", "Precio $", "Descripción"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblProductos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblProductosMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblProductos);

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setText("Nombre:");

        txtNombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombreActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setText("Precio:");

        txtPrecio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecioActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel7.setText("Descripción:");

        txtDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDescripcionActionPerformed(evt);
            }
        });

        bAccion1.setText("Guardar");
        bAccion1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAccion1ActionPerformed(evt);
            }
        });

        bAccion3.setText("Cancelar");
        bAccion3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAccion3ActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 24)); // NOI18N
        jLabel8.setText("Lista de productos:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel5)
                            .addComponent(txtNombre)
                            .addComponent(jLabel6)
                            .addComponent(txtPrecio)
                            .addComponent(jLabel7)
                            .addComponent(txtDescripcion, javax.swing.GroupLayout.DEFAULT_SIZE, 201, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(87, Short.MAX_VALUE)
                        .addComponent(bAccion3)
                        .addGap(54, 54, 54)
                        .addComponent(bAccion1)
                        .addGap(70, 70, 70)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 635, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(txtPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(36, 36, 36)
                .addComponent(jLabel7)
                .addGap(18, 18, 18)
                .addComponent(txtDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(67, 67, 67)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAccion1)
                    .addComponent(bAccion3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 440, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombreActionPerformed

    private void txtPrecioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecioActionPerformed

    private void txtDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDescripcionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescripcionActionPerformed

    private void bAccion1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAccion1ActionPerformed
        if (productoSeleccionado == null) {
            agregarProducto();
        } else {
            actualizarProducto();
            productoSeleccionado = null; 
        }
        limpiarCampos();
        actualizarTabla(); 
        bAccion1.setText("Guardar"); 
        bAccion3.setText("Cancelar");

    }//GEN-LAST:event_bAccion1ActionPerformed

    private void bAccion3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAccion3ActionPerformed
        if (productoSeleccionado == null) {
            this.dispose();
        } else {
            this.eliminarProducto();
            productoSeleccionado = null;
        }
        limpiarCampos();
        actualizarTabla();
    }//GEN-LAST:event_bAccion3ActionPerformed

    private void tblProductosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblProductosMouseClicked
        int fila = tblProductos.getSelectedRow();
        if (fila != -1) {
            productoSeleccionado = new Producto();
            productoSeleccionado.setId((Integer) tblProductos.getValueAt(fila, 0));
            productoSeleccionado.setNombre((String) tblProductos.getValueAt(fila, 1));
            productoSeleccionado.setPrecio((Float) tblProductos.getValueAt(fila, 2));
            productoSeleccionado.setDescripcion((String) tblProductos.getValueAt(fila, 3));

            txtNombre.setText(productoSeleccionado.getNombre());
            txtPrecio.setText(Float.toString(productoSeleccionado.getPrecio()));
            txtDescripcion.setText(productoSeleccionado.getDescripcion());

            bAccion1.setText("Actualizar");
            bAccion3.setText("Eliminar");
    }//GEN-LAST:event_tblProductosMouseClicked
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Frmprincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Frmprincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Frmprincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Frmprincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Frmprincipal().setVisible(true);
            }
        });
    }

    private void agregarProducto() {
        Producto producto = new Producto();
        producto.setNombre(txtNombre.getText());
        producto.setPrecio(parseFloat(txtPrecio.getText()));
        producto.setDescripcion(txtDescripcion.getText());

        pNeg.agregar(producto);
    }

    private void actualizarProducto() {

        Producto productoSeleccionado = obtenerProductoSeleccionadoDeTabla(); 
        if (productoSeleccionado != null) {
            productoSeleccionado.setNombre(txtNombre.getText());
            productoSeleccionado.setPrecio(parseFloat(txtPrecio.getText()));
            productoSeleccionado.setDescripcion(txtDescripcion.getText());

            pNeg.actualizar(productoSeleccionado);
        } else {
            System.out.println("No se ha seleccionado ningún producto para actualizar.");
        }
    }

    private void eliminarProducto() {

        pNeg.eliminar(productoSeleccionado.getId());
    }

    private void limpiarCampos() {
        txtNombre.setText("");
        txtPrecio.setText("");
        txtDescripcion.setText("");
    }

    private void llenarTablaProductos(List<Producto> productoLista) {
        DefaultTableModel modeloTabla = (DefaultTableModel) this.tblProductos.getModel();

        if (modeloTabla.getRowCount() > 0) {
            for (int i = modeloTabla.getRowCount() - 1; i > -1; i--) {
                modeloTabla.removeRow(i);
            }
        }

        if (productoLista != null) {
            productoLista.forEach(row -> {
                Object[] fila = new Object[4];
                fila[0] = row.getId();
                fila[1] = row.getNombre();
                fila[2] = row.getPrecio();
                fila[3] = row.getDescripcion();

                modeloTabla.addRow(fila);
            });
        }
    }

    private void actualizarTabla() {
        List<Producto> listaProducto = pNeg.cconsultarTodo();
        DefaultTableModel model = (DefaultTableModel) this.tblProductos.getModel();
        model.setRowCount(0);
        for (Producto producto : listaProducto) {
            Object[] fila = {
                producto.getId(),
                producto.getNombre(),
                producto.getPrecio(),
                producto.getDescripcion()
            };
            model.addRow(fila);
        }
    }

    private void cargarProductosEnTabla() {
        List<Producto> productos = this.pNeg.cconsultarTodo();
        this.llenarTablaProductos(productos);
    }

    private Producto obtenerProductoSeleccionadoDeTabla() {
        int filaSeleccionada = tblProductos.getSelectedRow();
        if (filaSeleccionada != -1) {
            Producto producto = new Producto();
            producto.setId((Integer) tblProductos.getValueAt(filaSeleccionada, 0)); 
            producto.setNombre((String) tblProductos.getValueAt(filaSeleccionada, 1));
            producto.setPrecio((Float) tblProductos.getValueAt(filaSeleccionada, 2));
            producto.setDescripcion((String) tblProductos.getValueAt(filaSeleccionada, 3));
            return producto;
        }
        return null;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAccion1;
    private javax.swing.JButton bAccion3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblProductos;
    private javax.swing.JTextField txtDescripcion;
    private javax.swing.JTextField txtNombre;
    private javax.swing.JTextField txtPrecio;
    // End of variables declaration//GEN-END:variables
}
